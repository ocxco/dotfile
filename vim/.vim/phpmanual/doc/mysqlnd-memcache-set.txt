mysqlnd_memcache_set -- Associate a MySQL connection with a Memcache
connection

  bool mysqlnd_memcache_set(mixed mysql_connection [, Memcached memcache_connection [, string pattern [, callback callback]]])~

Associate {mysql_connection} with {memcache_connection} using {pattern} as a
PCRE regular expression, and {callback} as a notification callback or to unset
the association of {mysql_connection}.

While associating a MySQL connection with a Memcache connection, this function
will query the MySQL Server for its configuration. It will automatically
detect whether the server is configured to use the InnoDB Memcache Daemon
Plugin or MySQL Cluster NDB Memcache support. It will also query the server to
automatically identify exported tables and other configuration options. The
results of this automatic configuration can be retrieved using
|mysqlnd_memcache_get_config|.

A handle to a MySQL Server using one of the MySQL API extensions for PHP,
which are PDO_MYSQL, mysqli or ext/mysql.

A Memcached instance with a connection to the MySQL Memcache Daemon plugin. If
this parameter is omitted, then {mysql_connection} will be unassociated from
any memcache connection. And if a previous association exists, then it will be
replaced.

A regular expression in Perl Compatible Regular Expression syntax used to
identify potential Memcache-queries. The query should have three sub patterns.
The first subpattern contains the requested field list, the second the name of
the ID column from the query and the third the requested value. If this
parameter is omitted or os set to &null;, then a default pattern will be used.

A callback which will be used whenever a query is being sent to MySQL. The
callback will receive a single &boolean; parameter telling if a query was sent
via Memcache.

&true; if the association or disassociation is successful, otherwise &false;
if there is an error.

|mysqlnd_memcache_set| example with |var_dump| as a simple debugging callback.

<?php >
  $mysqli = new mysqli("host", "user", "passwd", "database");
  $memc = new Memcached();
  $memc->addServer("host", 11211);
  mysqlnd_memcache_set($mysqli, $memc, NULL, 'var_dump');
  
  /* This query will be intercepted and executed via Memcache protocol */
  echo "Sending query for id via Memcache: ";
  $mysqli->query("SELECT f1, f2, f3 FROM test WHERE id = 1");
  
  /* f1 is not configured as valid key field, this won't be sent via Memcache */
  echo "Sending query for f1 via Memcache: ";
  $mysqli->query("SELECT id FROM test WHERE f1 = 1");
  
  mysqlnd_memcache_set($mysqli);
  
  /* Now the regular MySQL protocol will be used */
  echo "var_dump won't be invoked: ";
  $mysqli->query("SELECT f1, f2, f3 WHERE id = 1");
?>

The above example will output:

  Sending query for id via Memcache: bool(true)
  Sending query for f1 via Memcache: bool(false)
  var_dump won't be invoked:



|mysqlnd_memcache_get_config|

vim:ft=help:
